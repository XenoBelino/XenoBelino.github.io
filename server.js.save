const express = require("express");
const multer = require("multer");
const path = require("path");
const fs = require("fs");
const { exec } = require("child_process");

const app = express();

// 🟡 Logga alla inkommande requests
app.use((req, res, next) => {
  console.log(`[${new Date().toISOString()}] ${req.method} ${req.url}`);
  next();
});

// 🔐 CORS och säkerhetsheaders (justerat för utveckling)
app.use((req, res, next) => {
  res.setHeader("Cross-Origin-Embedder-Policy", "require-corp");
  res.setHeader("Cross-Origin-Opener-Policy", "same-origin");
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Headers", "*");
  next();
});

// 🔁 Servera statiska filer från "public" mappen (t.ex. page.html)
app.use(express.static(path.join(__dirname, "public")));

// 🗂️ Multer-konfiguration för att ta emot video
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, "uploads"),
  filename: (req, file, cb) => cb(null, Date.now() + "-" + file.originalname)
});

const upload = multer({
  storage,
  limits: {
    fileSize: 2 * 1024 * 1024 * 1024 // Max 2 GB
  }
});

app.get("/ping", (req, res) => {
  res.send("pong");
});

// 🚀 API-endpoint: Ta emot videon och kör Python-klienten
app.post("/api/predict", upload.single("file"), async (req, res) => {
  console.log("📩 Mottog POST /api/predict");

  if (!req.file) {
    console.log("⛔ Ingen fil mottagen.");
    return res.status(400).json({ error: "Ingen fil mottagen." });
  }

  const filePath = req.file.path;
  console.log("📁 Fil mottagen:", req.file.originalname);
  console.log("📂 Fil sparad till:", filePath);

  try {
    console.log("🚀 Startar Python-klient...");

exec(`python3 run_client.py "${filePath}"`, { timeout: 120000 }, (error, stdout, stderr => {
  fs.unlink(filePath, err => {
    if (err) console.warn("⚠️ Kunde inte radera temporär fil:", filePath);
    else console.log("🗑️ Fil borttagen:", filePath);
  });

  if (error) {
    console.error("❌ Python-process fel:");
    console.error("Error.message:", error.message);
    console.error("stderr:", stderr);
    console.error("stdout:", stdout);
    return res.status(500).json({ error: "Fel i AI-processen", details: stderr || error.message });
  }

  console.log("✅ Svar från Python:", stdout.trim());
  res.json({ result: stdout.trim() });
});

  } catch (error) {
    console.error("❌ Ovntat fel:", error.message);
    res.status(500).json({ error: "Oväntat serverfel" });
  }
});

// 🚀 Starta servern
app.listen(3000, () => {
  console.log("🌐 Servern körs på http://localhost:3000");
});

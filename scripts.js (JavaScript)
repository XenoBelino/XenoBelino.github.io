let mediaElement = null; // Will hold audio or video element
let wavesurfer = null; // Will hold Wavesurfer instance

// Handles file selection and displays the media
function handleFileSelect(event) {
    const file = event.target.files[0];
    const fileInfoDiv = document.getElementById('file-info');
    const mediaContainer = document.getElementById('media-container');

    if (file) {
        fileInfoDiv.textContent = `Selected file: ${file.name}`;
        let extension = file.name.split('.').pop().toLowerCase();
        
        // Clear previous media
        mediaContainer.innerHTML = '';

        // Handle audio files
        if (['mp3', 'wav', 'ogg'].includes(extension)) {
            // Create an audio element
            mediaElement = document.createElement('audio');
            mediaElement.controls = true;
            mediaElement.src = URL.createObjectURL(file);
            mediaContainer.appendChild(mediaElement);

            // Initialize Wavesurfer
            wavesurfer = WaveSurfer.create({
                container: '#wavesurfer',
                waveColor: '#ff6347',
                progressColor: '#f00',
                backend: 'MediaElement',
                mediaElement: mediaElement
            });

            wavesurfer.load(mediaElement.src); // Load the selected audio file

        } else if (['mp4', 'webm', 'avi'].includes(extension)) {
            // Handle video files
            mediaElement = document.createElement('video');
            mediaElement.controls = true;
            mediaElement.src = URL.createObjectURL(file);
            mediaContainer.appendChild(mediaElement);
        } else {
            fileInfoDiv.textContent = "Unsupported file type!";
        }
    }
}

// Adjust the volume for the media element
function adjustVolume() {
    let volumeControl = document.getElementById('volume');
    if (mediaElement) {
        mediaElement.volume = volumeControl.value;
    }
}

<video id="video-player" width="320" height="240" controls>
  <source src="assets/videos/my_video.mp4" type="video/mp4">
  Your browser does not support the video tag.
<video id="video-player" width="320" height="240" controls>
  <source src="videos/my_video.mp4" type="video/mp4">
  Your browser does not support the video tag.
<video id="video-player" width="320" height="240" controls>
  <source src="path_to_video.mp4" type="video/mp4">
  Your browser does not support the video tag.
</video>
https://xenobelino.github.io/assets/videos/my_video.mp4
function handleFileSelect(event) {
    const file = event.target.files[0];
    const fileInfoDiv = document.getElementById('file-info');
    
    if (file) {
        fileInfoDiv.textContent = `Selected file: ${file.name}`;
        
        // Skapa en URL för den valda filen
        const fileURL = URL.createObjectURL(file);
        
        // Hitta video-elementet och uppdatera src
        const videoPlayer = document.getElementById('video-player');
        const videoSource = videoPlayer.querySelector('source');
        videoSource.src = fileURL; // Sätt den valda filen som src
        
        // Uppdatera video och ladda om den
        videoPlayer.load(); // Detta tvingar webbläsaren att ladda om videon
    }
}
function adjustVolume(trackType) {
    let volumeControl = null;
    if (trackType === 'original') {
        volumeControl = document.getElementById('volume-original');
    } else if (trackType === 'hooks') {
        volumeControl = document.getElementById('volume-hooks');
    } else if (trackType === 'final') {
        volumeControl = document.getElementById('volume-final');
    }

    if (mediaElement) {
        mediaElement.volume = volumeControl.value;
    }
}
let wavesurfer;
function handleFileSelect(event) {
    const file = event.target.files[0];
    const fileInfoDiv = document.getElementById('file-info');
    const mediaContainer = document.getElementById('media-container');

    if (file) {
        fileInfoDiv.textContent = `Selected file: ${file.name}`;
        let extension = file.name.split('.').pop().toLowerCase();
        
        // Clear previous media
        mediaContainer.innerHTML = '';

        if (['mp3', 'wav', 'ogg'].includes(extension)) {
            // Initialize Wavesurfer for audio files
            const mediaElement = document.createElement('audio');
            mediaElement.src = URL.createObjectURL(file);
            mediaContainer.appendChild(mediaElement);
            
            // Create the Wavesurfer instance
            wavesurfer = WaveSurfer.create({
                container: '#waveform',
                waveColor: '#4F4A85',
                progressColor: '#383351',
                backend: 'MediaElement',
                mediaElement: mediaElement,
            });

            wavesurfer.load(mediaElement.src); // Load the selected audio file
        } else if (['mp4', 'webm', 'avi'].includes(extension)) {
            // Video element
            const mediaElement = document.createElement('video');
            mediaElement.controls = true;
            mediaElement.src = URL.createObjectURL(file);
            mediaContainer.appendChild(mediaElement);
        } else {
            fileInfoDiv.textContent = "Unsupported file type!";
        }
    }
}
